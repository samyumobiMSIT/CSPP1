************* Module Sudoku
Sudoku.py:6:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Sudoku.py:7:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Sudoku.py:8:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Sudoku.py:9:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Sudoku.py:15:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Sudoku.py:16:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Sudoku.py:17:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Sudoku.py:17:8: C0326: Exactly one space required around comparison
		if box!=".":
        ^^ (bad-whitespace)
Sudoku.py:18:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Sudoku.py:19:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Sudoku.py:20:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Sudoku.py:21:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Sudoku.py:22:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Sudoku.py:25:12: C0326: No space allowed before comma
def getRV(j ,ls):
            ^ (bad-whitespace)
Sudoku.py:25:12: C0326: Exactly one space required after comma
def getRV(j ,ls):
            ^ (bad-whitespace)
Sudoku.py:26:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Sudoku.py:29:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Sudoku.py:31:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Sudoku.py:32:0: W0311: Bad indentation. Found 9 spaces, expected 8 (bad-indentation)
Sudoku.py:33:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Sudoku.py:36:10: C0326: Exactly one space required after comma
def grid(j,i,ls ):
          ^ (bad-whitespace)
Sudoku.py:36:12: C0326: Exactly one space required after comma
def grid(j,i,ls ):
            ^ (bad-whitespace)
Sudoku.py:36:16: C0326: No space allowed before bracket
def grid(j,i,ls ):
                ^ (bad-whitespace)
Sudoku.py:39:28: C0326: Exactly one space required after comparison
    if(j >= 0 & j < 9) & (i >=0 & i < 9):
                            ^^ (bad-whitespace)
Sudoku.py:40:27: C0326: Exactly one space required after comma
        for srow in range(0,9): #subrow, subcol
                           ^ (bad-whitespace)
Sudoku.py:41:31: C0326: Exactly one space required after comma
            for scol in range(0,9):
                               ^ (bad-whitespace)
Sudoku.py:45:12: C0326: Exactly one space required after comma
def data(box,j,ls):
            ^ (bad-whitespace)
Sudoku.py:45:14: C0326: Exactly one space required after comma
def data(box,j,ls):
              ^ (bad-whitespace)
Sudoku.py:46:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Sudoku.py:46:7: C0326: Exactly one space required after comma
	n = [1,2,3,4,5,6,7,8,9]
       ^ (bad-whitespace)
Sudoku.py:46:9: C0326: Exactly one space required after comma
	n = [1,2,3,4,5,6,7,8,9]
         ^ (bad-whitespace)
Sudoku.py:46:11: C0326: Exactly one space required after comma
	n = [1,2,3,4,5,6,7,8,9]
           ^ (bad-whitespace)
Sudoku.py:46:13: C0326: Exactly one space required after comma
	n = [1,2,3,4,5,6,7,8,9]
             ^ (bad-whitespace)
Sudoku.py:46:15: C0326: Exactly one space required after comma
	n = [1,2,3,4,5,6,7,8,9]
               ^ (bad-whitespace)
Sudoku.py:46:17: C0326: Exactly one space required after comma
	n = [1,2,3,4,5,6,7,8,9]
                 ^ (bad-whitespace)
Sudoku.py:46:19: C0326: Exactly one space required after comma
	n = [1,2,3,4,5,6,7,8,9]
                   ^ (bad-whitespace)
Sudoku.py:46:21: C0326: Exactly one space required after comma
	n = [1,2,3,4,5,6,7,8,9]
                     ^ (bad-whitespace)
Sudoku.py:47:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Sudoku.py:49:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Sudoku.py:49:29: C0326: Exactly one space required after comma
	r_v = condatatoint(getRV(box,ls))
                             ^ (bad-whitespace)
Sudoku.py:50:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Sudoku.py:50:29: C0326: Exactly one space required after comma
	c_v = condatatoint(getCV(box,ls))
                             ^ (bad-whitespace)
Sudoku.py:51:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Sudoku.py:51:28: C0326: Exactly one space required after comma
	g_v = condatatoint(grid(box,j,ls))
                            ^ (bad-whitespace)
Sudoku.py:51:30: C0326: Exactly one space required after comma
	g_v = condatatoint(grid(box,j,ls))
                              ^ (bad-whitespace)
Sudoku.py:52:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Sudoku.py:53:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Sudoku.py:54:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Sudoku.py:55:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Sudoku.py:56:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Sudoku.py:56:30: C0326: Exactly one space required after comma
	result = ''.join(list(map(str,new)))
                              ^ (bad-whitespace)
Sudoku.py:57:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Sudoku.py:59:26: C0326: No space allowed before :
def condatatoint(integer) :
                          ^ (bad-whitespace)
Sudoku.py:60:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Sudoku.py:61:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Sudoku.py:61:18: C0326: Exactly one space required after comma
	r = r.replace(".","")
                  ^ (bad-whitespace)
Sudoku.py:62:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Sudoku.py:63:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Sudoku.py:63:22: C0326: Exactly one space required after comma
	mapped = list(map(int,r))
                      ^ (bad-whitespace)
Sudoku.py:64:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Sudoku.py:70:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Sudoku.py:71:21: C0303: Trailing whitespace (trailing-whitespace)
Sudoku.py:72:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Sudoku.py:74:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Sudoku.py:75:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Sudoku.py:75:15: C0326: Exactly one space required after comma
				r = getRV(a,sudo)
               ^ (bad-whitespace)
Sudoku.py:76:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Sudoku.py:76:15: C0326: Exactly one space required after comma
				c = getCV(b,sudo)
               ^ (bad-whitespace)
Sudoku.py:77:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Sudoku.py:78:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Sudoku.py:79:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Sudoku.py:79:20: C0326: Exactly one space required after comma
				for x in range(1,10):
                    ^ (bad-whitespace)
Sudoku.py:81:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Sudoku.py:82:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Sudoku.py:83:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Sudoku.py:88:11: C0326: No space allowed before :
def main() :
           ^ (bad-whitespace)
Sudoku.py:97:0: W0312: Found indentation with tabs instead of spaces (mixed-indentation)
Sudoku.py:103:0: C0305: Trailing newlines (trailing-newlines)
Sudoku.py:1:0: C0103: Module name "Sudoku" doesn't conform to snake_case naming style (invalid-name)
Sudoku.py:5:0: C0103: Argument name "v" doesn't conform to snake_case naming style (invalid-name)
Sudoku.py:5:0: C0111: Missing function docstring (missing-docstring)
Sudoku.py:13:-1: W0105: String statement has no effect (pointless-string-statement)
Sudoku.py:14:0: C0111: Missing function docstring (missing-docstring)
Sudoku.py:22:4: W0101: Unreachable code (unreachable)
Sudoku.py:25:0: C0103: Function name "getRV" doesn't conform to snake_case naming style (invalid-name)
Sudoku.py:25:0: C0103: Argument name "ls" doesn't conform to snake_case naming style (invalid-name)
Sudoku.py:25:0: C0111: Missing function docstring (missing-docstring)
Sudoku.py:28:0: C0103: Function name "getCV" doesn't conform to snake_case naming style (invalid-name)
Sudoku.py:28:0: C0103: Argument name "ls" doesn't conform to snake_case naming style (invalid-name)
Sudoku.py:28:0: C0111: Missing function docstring (missing-docstring)
Sudoku.py:29:1: C0103: Variable name "c" doesn't conform to snake_case naming style (invalid-name)
Sudoku.py:31:5: C0103: Variable name "r" doesn't conform to snake_case naming style (invalid-name)
Sudoku.py:36:0: C0103: Argument name "ls" doesn't conform to snake_case naming style (invalid-name)
Sudoku.py:36:0: C0111: Missing function docstring (missing-docstring)
Sudoku.py:38:4: C0103: Variable name "s" doesn't conform to snake_case naming style (invalid-name)
Sudoku.py:45:0: C0103: Argument name "ls" doesn't conform to snake_case naming style (invalid-name)
Sudoku.py:45:0: C0111: Missing function docstring (missing-docstring)
Sudoku.py:46:1: C0103: Variable name "n" doesn't conform to snake_case naming style (invalid-name)
Sudoku.py:53:5: R1704: Redefining argument with the local name 'box' (redefined-argument-from-local)
Sudoku.py:59:0: C0111: Missing function docstring (missing-docstring)
Sudoku.py:60:1: C0103: Variable name "r" doesn't conform to snake_case naming style (invalid-name)
Sudoku.py:61:1: C0103: Variable name "r" doesn't conform to snake_case naming style (invalid-name)
Sudoku.py:62:1: C0103: Variable name "r" doesn't conform to snake_case naming style (invalid-name)
Sudoku.py:67:0: W0105: String statement has no effect (pointless-string-statement)
Sudoku.py:68:0: C0103: Function name "pv" doesn't conform to snake_case naming style (invalid-name)
Sudoku.py:68:0: C0103: Argument name "ls" doesn't conform to snake_case naming style (invalid-name)
Sudoku.py:68:0: C0111: Missing function docstring (missing-docstring)
Sudoku.py:70:1: C0200: Consider using enumerate instead of iterating with range and len (consider-using-enumerate)
Sudoku.py:75:4: C0103: Variable name "r" doesn't conform to snake_case naming style (invalid-name)
Sudoku.py:75:14: E0602: Undefined variable 'a' (undefined-variable)
Sudoku.py:75:16: E0602: Undefined variable 'sudo' (undefined-variable)
Sudoku.py:76:4: C0103: Variable name "c" doesn't conform to snake_case naming style (invalid-name)
Sudoku.py:76:14: E0602: Undefined variable 'b' (undefined-variable)
Sudoku.py:76:16: E0602: Undefined variable 'sudo' (undefined-variable)
Sudoku.py:79:8: C0103: Variable name "x" doesn't conform to snake_case naming style (invalid-name)
Sudoku.py:87:-1: W0105: String statement has no effect (pointless-string-statement)
Sudoku.py:88:0: C0111: Missing function docstring (missing-docstring)
Sudoku.py:89:4: C0103: Variable name "v" doesn't conform to snake_case naming style (invalid-name)
Sudoku.py:92:11: W0703: Catching too general exception Exception (broad-except)
Sudoku.py:92:4: C0103: Variable name "f" doesn't conform to snake_case naming style (invalid-name)

----------------------------------------------------------------------
Your code has been rated at -10.00/10 (previous run: -10.00/10, +0.00)

